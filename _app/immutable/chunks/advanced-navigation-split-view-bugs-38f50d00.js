import{S as At,i as Ht,s as Bt,k as o,q as t,a as u,l,m as c,r as e,h as n,c as r,n as T,J as St,b as i,H as a,C as Aa}from"./index-f7dcfbff.js";function Mt(Vt){let d,un,as,rn,kn,ts,dn,fn,Ds,_,mn,es,hn,vn,Ns,I,Tt=`<code class="language-swift"><span class="token class-name">NavigationSplitView</span><span class="token punctuation">(</span>
    columnVisibility<span class="token punctuation">:</span> <span class="token class-name">NavigationSplitViewVisibility</span><span class="token punctuation">,</span>
    preferredCompactColumn<span class="token punctuation">:</span> <span class="token class-name">NavigationSplitViewColumn</span>
<span class="token punctuation">)</span></code>`,Ps,x,wn,Os,m,ps,yn,bn,os,En,gn,D,_n,ls,Cn,Sn,xs,L,Vn,Ls,N,It=`<code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>
    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> navigationPath <span class="token operator">=</span> <span class="token class-name">NavigationPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> preferredColumn<span class="token punctuation">:</span> <span class="token class-name">NavigationSplitViewColumn</span> <span class="token operator">=</span> <span class="token punctuation">.</span>sidebar
    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> columnVisibility<span class="token punctuation">:</span> <span class="token class-name">NavigationSplitViewVisibility</span> <span class="token operator">=</span> <span class="token punctuation">.</span>all

    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">NavigationSplitView</span><span class="token punctuation">(</span>
            columnVisibility<span class="token punctuation">:</span> $columnVisibility<span class="token punctuation">,</span>
            preferredCompactColumn<span class="token punctuation">:</span> $preferredColumn
        <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"First"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>
                    preferredColumn <span class="token operator">=</span> <span class="token punctuation">.</span>content
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Sidebar"</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span> content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"first content"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>
                    preferredColumn <span class="token operator">=</span> <span class="token punctuation">.</span>detail
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Content"</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">NavigationStack</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> $navigationPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>
                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Detail"</span></span><span class="token punctuation">)</span>
                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Push"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                        navigationPath<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"More Detail"</span></span><span class="token punctuation">)</span>
                    <span class="token punctuation">&#125;</span>
                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Reset"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                        preferredColumn <span class="token operator">=</span> <span class="token punctuation">.</span>sidebar
                    <span class="token punctuation">&#125;</span>
                <span class="token punctuation">&#125;</span>
                <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Detail"</span></span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> value <span class="token keyword">in</span>
                    <span class="token class-name">Text</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"More Detail"</span></span><span class="token punctuation">)</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,As,A,Tn,Hs,H,B,Ha,Bs,h,In,is,Dn,Nn,cs,Pn,On,Ms,M,R,Ba,Rs,U,xn,Us,W,Ln,Ws,f,An,us,Hn,Bn,rs,Mn,Rn,ks,Un,Wn,$s,$,$n,js,j,jn,qs,v,qn,ds,Gn,Yn,fs,Fn,Jn,Gs,k,Zn,ms,zn,Kn,hs,Qn,Xn,vs,sa,na,ws,aa,ta,Ys,w,ea,ys,pa,oa,bs,la,ia,Fs,q,ca,Js,C,ua,Es,ra,ka,Zs,y,da,gs,fa,ma,_s,ha,va,zs,G,wa,Ks,Y,ya,Qs,P,Dt=`<code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>
    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> department<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>
    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> employee<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>

    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">NavigationSplitView</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"HR"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"IT"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Sales"</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation"></span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $department<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> department <span class="token keyword">in</span>
                <span class="token class-name">Text</span><span class="token punctuation">(</span>department<span class="token punctuation">)</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span> content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">Text</span><span class="token punctuation">(</span>department<span class="token punctuation">)</span>
            <span class="token class-name">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Alice"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Bob"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Charlie"</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation"></span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $employee<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> employee <span class="token keyword">in</span>
                <span class="token class-name">Text</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Reset selection"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    employee <span class="token operator">=</span> <span class="token nil constant">nil</span>
                    department <span class="token operator">=</span> <span class="token nil constant">nil</span>
                <span class="token punctuation">&#125;</span>
                <span class="token class-name">Text</span><span class="token punctuation">(</span>department<span class="token punctuation">)</span>
                <span class="token class-name">Text</span><span class="token punctuation">(</span>employee <span class="token operator">??</span> <span class="token string-literal"><span class="token string">"Nothing Selected"</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Xs,F,ba,sn,S,Ea,Cs,ga,_a,nn,b,Ca,Ss,Sa,Va,Vs,Ta,Ia,an,O,Nt=`<code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>
    <span class="token operator">...</span>

    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> identifier <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">NavigationSplitView</span><span class="token punctuation">(</span>
            columnVisibility<span class="token punctuation">:</span> $columnVisibility<span class="token punctuation">,</span>
            preferredCompactColumn<span class="token punctuation">:</span> $preferredColumn
        <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
          <span class="token operator">...</span>
        <span class="token punctuation">&#125;</span> content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
          <span class="token operator">...</span>
        <span class="token punctuation">&#125;</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">NavigationStack</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> $navigationPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>
                    <span class="token operator">...</span>
                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Push"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                      <span class="token operator">...</span>
                    <span class="token punctuation">&#125;</span>
                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Reset"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                        identifier <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        preferredColumn <span class="token operator">=</span> <span class="token punctuation">.</span>sidebar
                    <span class="token punctuation">&#125;</span>
                <span class="token punctuation">&#125;</span>
                <span class="token operator">...</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>identifier<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,tn,J,Da,en,E,Na,Ts,Pa,Oa,Is,xa,La;return{c(){d=o("p"),un=t("I lately ran into some weird behavior with "),as=o("code"),rn=t("NavigationSplitView"),kn=t(". The issue happens when using it with a "),ts=o("code"),dn=t("NavigationStack"),fn=t(" in the detail view to add one more level of “drill down.”"),Ds=u(),_=o("p"),mn=t("To have full control over column display, I used two properties in the "),es=o("code"),hn=t("NavigationSplitView"),vn=t(" init:"),Ns=u(),I=o("pre"),Ps=u(),x=o("p"),wn=t("Here’s what I wanted my users to do:"),Os=u(),m=o("ol"),ps=o("li"),yn=t("Select something on the sidebar"),bn=u(),os=o("li"),En=t("Choose an item from the content view"),gn=u(),D=o("li"),_n=t("On the detail page, either drill down further or go back to sidebar by tapping a "),ls=o("code"),Cn=t("reset"),Sn=t(" button"),xs=u(),L=o("p"),Vn=t("Here’s my code:"),Ls=u(),N=o("pre"),As=u(),A=o("p"),Tn=t("Nothing special so far. Let’s look at the video of the behavior:"),Hs=u(),H=o("p"),B=o("img"),Bs=u(),h=o("p"),In=t("And now let’s see what happens if the user decides to push on the "),is=o("code"),Dn=t("NavigationStack"),Nn=t(" and hits the "),cs=o("code"),Pn=t("reset"),On=t(" button afterward."),Ms=u(),M=o("p"),R=o("img"),Rs=u(),U=o("p"),xn=t("Did you see it?"),Us=u(),W=o("p"),Ln=t("For some reason, the programmatic back navigation stopped working!"),Ws=u(),f=o("p"),An=t("What happened? Once we pushed a view onto the "),us=o("code"),Hn=t("NavigationStack"),Bn=t(" and tried to change the "),rs=o("code"),Mn=t("columnVisibility"),Rn=t(" or "),ks=o("code"),Un=t("preferredCompactColumn"),Wn=t(", it just ignored us."),$s=u(),$=o("p"),$n=t("The manual back arrow and gesture still work fine though."),js=u(),j=o("h2"),jn=t("Why is this happening?"),qs=u(),v=o("p"),qn=t("I’m not 100% sure what’s happening under the hood. After debugging, I found that iOS updates the "),ds=o("code"),Gn=t("preferredCompactColumn"),Yn=t(" by itself. This happens when you pop the last view off of the "),fs=o("code"),Fn=t("NavigationStack"),Jn=t("."),Gs=u(),k=o("p"),Zn=t("The "),ms=o("code"),zn=t("NavigationSplitView"),Kn=t(" seems confused. It thinks this navigation is its own and sets "),hs=o("code"),Qn=t("preferredCompactColumn"),Xn=t(" to "),vs=o("code"),sa=t(".content"),na=t(". But it still shows the "),ws=o("code"),aa=t(".detail"),ta=t(" column on screen!"),Ys=u(),w=o("p"),ea=t("Even weirder: updating "),ys=o("code"),pa=t("preferredCompactColumn"),oa=t(" to "),bs=o("code"),la=t(".detail"),ia=t(" again doesn’t fix it. Only manually navigating back and forth will reset things."),Fs=u(),q=o("h2"),ca=t("Why is this an issue?"),Js=u(),C=o("p"),ua=t("You might use "),Es=o("code"),ra=t("NavigationSplitView"),ka=t(" and never hit this problem. If so, lucky you!"),Zs=u(),y=o("p"),da=t("But this can be a nasty bug whenever you have multiple sections in your app and want to let users quickly jump between them. I’d also argue that with complex navigation, you’ll naturally want more control over which columns are displayed and will lean towards the "),gs=o("code"),fa=t("columnVisibility"),ma=t(" and "),_s=o("code"),ha=t("preferredCompactColumn"),va=t(" API."),zs=u(),G=o("h2"),wa=t("My workaround"),Ks=u(),Y=o("p"),ya=t("There are actually two ways to sail around this issue. The first one is to stick to the selection-based navigation showcased in Apple’s documentation:"),Qs=u(),P=o("pre"),Xs=u(),F=o("p"),ba=t("This works fine but lacks flexibility. Maybe you don’t have lists in your sidebar or content columns. Or maybe your existing navigation patterns don’t play well with this selection-based approach."),sn=u(),S=o("p"),Ea=t("This is where my dirty workaround comes in. I tried everything to fix this elegantly. But only one thing worked: forcing SwiftUI to re-render the whole "),Cs=o("code"),ga=t("NavigationSplitView"),_a=t("."),nn=u(),b=o("p"),Ca=t("I attached an "),Ss=o("code"),Sa=t(".id(:)"),Va=t(" to the view that changes before column updates whenever the "),Vs=o("code"),Ta=t("NavigationPath"),Ia=t(" was modified."),an=u(),O=o("pre"),tn=u(),J=o("p"),Da=t("While this works, it might cause some UI flickering. So I’m still not completely happy with it."),en=u(),E=o("p"),Na=t("If there’s one takeaway from this post, it’s this: stick to selection-based navigation for "),Ts=o("code"),Pa=t("NavigationSplitView"),Oa=t(" when you can make it work with your app architecture. Don’t mess with "),Is=o("code"),xa=t("preferredCompactColumn"),La=t(" if you can avoid it. At least until apple fixes this bug. Your future self will thank you!"),this.h()},l(s){d=l(s,"P",{});var p=c(d);un=e(p,"I lately ran into some weird behavior with "),as=l(p,"CODE",{});var Ma=c(as);rn=e(Ma,"NavigationSplitView"),Ma.forEach(n),kn=e(p,". The issue happens when using it with a "),ts=l(p,"CODE",{});var Ra=c(ts);dn=e(Ra,"NavigationStack"),Ra.forEach(n),fn=e(p," in the detail view to add one more level of “drill down.”"),p.forEach(n),Ds=r(s),_=l(s,"P",{});var pn=c(_);mn=e(pn,"To have full control over column display, I used two properties in the "),es=l(pn,"CODE",{});var Ua=c(es);hn=e(Ua,"NavigationSplitView"),Ua.forEach(n),vn=e(pn," init:"),pn.forEach(n),Ns=r(s),I=l(s,"PRE",{class:!0});var Pt=c(I);Pt.forEach(n),Ps=r(s),x=l(s,"P",{});var Wa=c(x);wn=e(Wa,"Here’s what I wanted my users to do:"),Wa.forEach(n),Os=r(s),m=l(s,"OL",{});var Z=c(m);ps=l(Z,"LI",{});var $a=c(ps);yn=e($a,"Select something on the sidebar"),$a.forEach(n),bn=r(Z),os=l(Z,"LI",{});var ja=c(os);En=e(ja,"Choose an item from the content view"),ja.forEach(n),gn=r(Z),D=l(Z,"LI",{});var on=c(D);_n=e(on,"On the detail page, either drill down further or go back to sidebar by tapping a "),ls=l(on,"CODE",{});var qa=c(ls);Cn=e(qa,"reset"),qa.forEach(n),Sn=e(on," button"),on.forEach(n),Z.forEach(n),xs=r(s),L=l(s,"P",{});var Ga=c(L);Vn=e(Ga,"Here’s my code:"),Ga.forEach(n),Ls=r(s),N=l(s,"PRE",{class:!0});var Ot=c(N);Ot.forEach(n),As=r(s),A=l(s,"P",{});var Ya=c(A);Tn=e(Ya,"Nothing special so far. Let’s look at the video of the behavior:"),Ya.forEach(n),Hs=r(s),H=l(s,"P",{});var Fa=c(H);B=l(Fa,"IMG",{src:!0,alt:!0}),Fa.forEach(n),Bs=r(s),h=l(s,"P",{});var z=c(h);In=e(z,"And now let’s see what happens if the user decides to push on the "),is=l(z,"CODE",{});var Ja=c(is);Dn=e(Ja,"NavigationStack"),Ja.forEach(n),Nn=e(z," and hits the "),cs=l(z,"CODE",{});var Za=c(cs);Pn=e(Za,"reset"),Za.forEach(n),On=e(z," button afterward."),z.forEach(n),Ms=r(s),M=l(s,"P",{});var za=c(M);R=l(za,"IMG",{src:!0,alt:!0}),za.forEach(n),Rs=r(s),U=l(s,"P",{});var Ka=c(U);xn=e(Ka,"Did you see it?"),Ka.forEach(n),Us=r(s),W=l(s,"P",{});var Qa=c(W);Ln=e(Qa,"For some reason, the programmatic back navigation stopped working!"),Qa.forEach(n),Ws=r(s),f=l(s,"P",{});var V=c(f);An=e(V,"What happened? Once we pushed a view onto the "),us=l(V,"CODE",{});var Xa=c(us);Hn=e(Xa,"NavigationStack"),Xa.forEach(n),Bn=e(V," and tried to change the "),rs=l(V,"CODE",{});var st=c(rs);Mn=e(st,"columnVisibility"),st.forEach(n),Rn=e(V," or "),ks=l(V,"CODE",{});var nt=c(ks);Un=e(nt,"preferredCompactColumn"),nt.forEach(n),Wn=e(V,", it just ignored us."),V.forEach(n),$s=r(s),$=l(s,"P",{});var at=c($);$n=e(at,"The manual back arrow and gesture still work fine though."),at.forEach(n),js=r(s),j=l(s,"H2",{});var tt=c(j);jn=e(tt,"Why is this happening?"),tt.forEach(n),qs=r(s),v=l(s,"P",{});var K=c(v);qn=e(K,"I’m not 100% sure what’s happening under the hood. After debugging, I found that iOS updates the "),ds=l(K,"CODE",{});var et=c(ds);Gn=e(et,"preferredCompactColumn"),et.forEach(n),Yn=e(K," by itself. This happens when you pop the last view off of the "),fs=l(K,"CODE",{});var pt=c(fs);Fn=e(pt,"NavigationStack"),pt.forEach(n),Jn=e(K,"."),K.forEach(n),Gs=r(s),k=l(s,"P",{});var g=c(k);Zn=e(g,"The "),ms=l(g,"CODE",{});var ot=c(ms);zn=e(ot,"NavigationSplitView"),ot.forEach(n),Kn=e(g," seems confused. It thinks this navigation is its own and sets "),hs=l(g,"CODE",{});var lt=c(hs);Qn=e(lt,"preferredCompactColumn"),lt.forEach(n),Xn=e(g," to "),vs=l(g,"CODE",{});var it=c(vs);sa=e(it,".content"),it.forEach(n),na=e(g,". But it still shows the "),ws=l(g,"CODE",{});var ct=c(ws);aa=e(ct,".detail"),ct.forEach(n),ta=e(g," column on screen!"),g.forEach(n),Ys=r(s),w=l(s,"P",{});var Q=c(w);ea=e(Q,"Even weirder: updating "),ys=l(Q,"CODE",{});var ut=c(ys);pa=e(ut,"preferredCompactColumn"),ut.forEach(n),oa=e(Q," to "),bs=l(Q,"CODE",{});var rt=c(bs);la=e(rt,".detail"),rt.forEach(n),ia=e(Q," again doesn’t fix it. Only manually navigating back and forth will reset things."),Q.forEach(n),Fs=r(s),q=l(s,"H2",{});var kt=c(q);ca=e(kt,"Why is this an issue?"),kt.forEach(n),Js=r(s),C=l(s,"P",{});var ln=c(C);ua=e(ln,"You might use "),Es=l(ln,"CODE",{});var dt=c(Es);ra=e(dt,"NavigationSplitView"),dt.forEach(n),ka=e(ln," and never hit this problem. If so, lucky you!"),ln.forEach(n),Zs=r(s),y=l(s,"P",{});var X=c(y);da=e(X,"But this can be a nasty bug whenever you have multiple sections in your app and want to let users quickly jump between them. I’d also argue that with complex navigation, you’ll naturally want more control over which columns are displayed and will lean towards the "),gs=l(X,"CODE",{});var ft=c(gs);fa=e(ft,"columnVisibility"),ft.forEach(n),ma=e(X," and "),_s=l(X,"CODE",{});var mt=c(_s);ha=e(mt,"preferredCompactColumn"),mt.forEach(n),va=e(X," API."),X.forEach(n),zs=r(s),G=l(s,"H2",{});var ht=c(G);wa=e(ht,"My workaround"),ht.forEach(n),Ks=r(s),Y=l(s,"P",{});var vt=c(Y);ya=e(vt,"There are actually two ways to sail around this issue. The first one is to stick to the selection-based navigation showcased in Apple’s documentation:"),vt.forEach(n),Qs=r(s),P=l(s,"PRE",{class:!0});var xt=c(P);xt.forEach(n),Xs=r(s),F=l(s,"P",{});var wt=c(F);ba=e(wt,"This works fine but lacks flexibility. Maybe you don’t have lists in your sidebar or content columns. Or maybe your existing navigation patterns don’t play well with this selection-based approach."),wt.forEach(n),sn=r(s),S=l(s,"P",{});var cn=c(S);Ea=e(cn,"This is where my dirty workaround comes in. I tried everything to fix this elegantly. But only one thing worked: forcing SwiftUI to re-render the whole "),Cs=l(cn,"CODE",{});var yt=c(Cs);ga=e(yt,"NavigationSplitView"),yt.forEach(n),_a=e(cn,"."),cn.forEach(n),nn=r(s),b=l(s,"P",{});var ss=c(b);Ca=e(ss,"I attached an "),Ss=l(ss,"CODE",{});var bt=c(Ss);Sa=e(bt,".id(:)"),bt.forEach(n),Va=e(ss," to the view that changes before column updates whenever the "),Vs=l(ss,"CODE",{});var Et=c(Vs);Ta=e(Et,"NavigationPath"),Et.forEach(n),Ia=e(ss," was modified."),ss.forEach(n),an=r(s),O=l(s,"PRE",{class:!0});var Lt=c(O);Lt.forEach(n),tn=r(s),J=l(s,"P",{});var gt=c(J);Da=e(gt,"While this works, it might cause some UI flickering. So I’m still not completely happy with it."),gt.forEach(n),en=r(s),E=l(s,"P",{});var ns=c(E);Na=e(ns,"If there’s one takeaway from this post, it’s this: stick to selection-based navigation for "),Ts=l(ns,"CODE",{});var _t=c(Ts);Pa=e(_t,"NavigationSplitView"),_t.forEach(n),Oa=e(ns," when you can make it work with your app architecture. Don’t mess with "),Is=l(ns,"CODE",{});var Ct=c(Is);xa=e(Ct,"preferredCompactColumn"),Ct.forEach(n),La=e(ns," if you can avoid it. At least until apple fixes this bug. Your future self will thank you!"),ns.forEach(n),this.h()},h(){T(I,"class","language-swift"),T(N,"class","language-swift"),St(B.src,Ha="/blog/advanced-navigation-split-view-bugs/first.gif")||T(B,"src",Ha),T(B,"alt","The happy path"),St(R.src,Ba="/blog/advanced-navigation-split-view-bugs/second.gif")||T(R,"src",Ba),T(R,"alt","The issue"),T(P,"class","language-swift"),T(O,"class","language-swift")},m(s,p){i(s,d,p),a(d,un),a(d,as),a(as,rn),a(d,kn),a(d,ts),a(ts,dn),a(d,fn),i(s,Ds,p),i(s,_,p),a(_,mn),a(_,es),a(es,hn),a(_,vn),i(s,Ns,p),i(s,I,p),I.innerHTML=Tt,i(s,Ps,p),i(s,x,p),a(x,wn),i(s,Os,p),i(s,m,p),a(m,ps),a(ps,yn),a(m,bn),a(m,os),a(os,En),a(m,gn),a(m,D),a(D,_n),a(D,ls),a(ls,Cn),a(D,Sn),i(s,xs,p),i(s,L,p),a(L,Vn),i(s,Ls,p),i(s,N,p),N.innerHTML=It,i(s,As,p),i(s,A,p),a(A,Tn),i(s,Hs,p),i(s,H,p),a(H,B),i(s,Bs,p),i(s,h,p),a(h,In),a(h,is),a(is,Dn),a(h,Nn),a(h,cs),a(cs,Pn),a(h,On),i(s,Ms,p),i(s,M,p),a(M,R),i(s,Rs,p),i(s,U,p),a(U,xn),i(s,Us,p),i(s,W,p),a(W,Ln),i(s,Ws,p),i(s,f,p),a(f,An),a(f,us),a(us,Hn),a(f,Bn),a(f,rs),a(rs,Mn),a(f,Rn),a(f,ks),a(ks,Un),a(f,Wn),i(s,$s,p),i(s,$,p),a($,$n),i(s,js,p),i(s,j,p),a(j,jn),i(s,qs,p),i(s,v,p),a(v,qn),a(v,ds),a(ds,Gn),a(v,Yn),a(v,fs),a(fs,Fn),a(v,Jn),i(s,Gs,p),i(s,k,p),a(k,Zn),a(k,ms),a(ms,zn),a(k,Kn),a(k,hs),a(hs,Qn),a(k,Xn),a(k,vs),a(vs,sa),a(k,na),a(k,ws),a(ws,aa),a(k,ta),i(s,Ys,p),i(s,w,p),a(w,ea),a(w,ys),a(ys,pa),a(w,oa),a(w,bs),a(bs,la),a(w,ia),i(s,Fs,p),i(s,q,p),a(q,ca),i(s,Js,p),i(s,C,p),a(C,ua),a(C,Es),a(Es,ra),a(C,ka),i(s,Zs,p),i(s,y,p),a(y,da),a(y,gs),a(gs,fa),a(y,ma),a(y,_s),a(_s,ha),a(y,va),i(s,zs,p),i(s,G,p),a(G,wa),i(s,Ks,p),i(s,Y,p),a(Y,ya),i(s,Qs,p),i(s,P,p),P.innerHTML=Dt,i(s,Xs,p),i(s,F,p),a(F,ba),i(s,sn,p),i(s,S,p),a(S,Ea),a(S,Cs),a(Cs,ga),a(S,_a),i(s,nn,p),i(s,b,p),a(b,Ca),a(b,Ss),a(Ss,Sa),a(b,Va),a(b,Vs),a(Vs,Ta),a(b,Ia),i(s,an,p),i(s,O,p),O.innerHTML=Nt,i(s,tn,p),i(s,J,p),a(J,Da),i(s,en,p),i(s,E,p),a(E,Na),a(E,Ts),a(Ts,Pa),a(E,Oa),a(E,Is),a(Is,xa),a(E,La)},p:Aa,i:Aa,o:Aa,d(s){s&&n(d),s&&n(Ds),s&&n(_),s&&n(Ns),s&&n(I),s&&n(Ps),s&&n(x),s&&n(Os),s&&n(m),s&&n(xs),s&&n(L),s&&n(Ls),s&&n(N),s&&n(As),s&&n(A),s&&n(Hs),s&&n(H),s&&n(Bs),s&&n(h),s&&n(Ms),s&&n(M),s&&n(Rs),s&&n(U),s&&n(Us),s&&n(W),s&&n(Ws),s&&n(f),s&&n($s),s&&n($),s&&n(js),s&&n(j),s&&n(qs),s&&n(v),s&&n(Gs),s&&n(k),s&&n(Ys),s&&n(w),s&&n(Fs),s&&n(q),s&&n(Js),s&&n(C),s&&n(Zs),s&&n(y),s&&n(zs),s&&n(G),s&&n(Ks),s&&n(Y),s&&n(Qs),s&&n(P),s&&n(Xs),s&&n(F),s&&n(sn),s&&n(S),s&&n(nn),s&&n(b),s&&n(an),s&&n(O),s&&n(tn),s&&n(J),s&&n(en),s&&n(E)}}}const Ut={title:"NavigationSplitView's Hidden Trap – Don't Get Stuck Like I Did",author:"Christian",date:"2025-05-16T00:00:00.000Z",layout:"blog",description:"NavigationSplitView seems easy to use. And Apple's example projects are. But step just a little outside the basic path, and you can easily run into problems.",published:!0};class Wt extends At{constructor(d){super(),Ht(this,d,null,Mt,Bt,{})}}export{Wt as default,Ut as metadata};
