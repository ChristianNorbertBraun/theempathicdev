import{S as D,i as M,s as V,k as n,q as g,a as b,l as r,m as c,r as u,h as i,c as L,b as x,E as e,C}from"./index-ce772e05.js";function H(B){let l,d,_,f,a,h,v,w,p,y,E,m,I;return{c(){l=n("ol"),d=n("li"),_=g("Defining what you want to achive"),f=b(),a=n("ul"),h=n("li"),v=g("Saving the image is part of the ViewController"),w=b(),p=n("li"),y=g("Both ways -> Updating and creating an asset"),E=b(),m=n("li"),I=g("I want to apply filters to the images -> save the image reload it again and compare it")},l(t){l=r(t,"OL",{});var o=c(l);d=r(o,"LI",{});var k=c(d);_=u(k,"Defining what you want to achive"),k.forEach(i),o.forEach(i),f=L(t),a=r(t,"UL",{});var s=c(a);h=r(s,"LI",{});var S=c(h);v=u(S,"Saving the image is part of the ViewController"),S.forEach(i),w=L(s),p=r(s,"LI",{});var U=c(p);y=u(U,"Both ways -> Updating and creating an asset"),U.forEach(i),E=L(s),m=r(s,"LI",{});var q=c(m);I=u(q,"I want to apply filters to the images -> save the image reload it again and compare it"),q.forEach(i),s.forEach(i)},m(t,o){x(t,l,o),e(l,d),e(d,_),x(t,f,o),x(t,a,o),e(a,h),e(h,v),e(a,w),e(a,p),e(p,y),e(a,E),e(a,m),e(m,I)},p:C,i:C,o:C,d(t){t&&i(l),t&&i(f),t&&i(a)}}}const T={title:"Making code testable",author:"Christian",date:"2023-02-20T00:00:00.000Z",layout:"blog",description:"How I approached nested code to make it testable",published:!0};class Z extends D{constructor(l){super(),M(this,l,null,H,V,{})}}export{Z as default,T as metadata};
